// handling result output operations

IFMACRO(!idpSave)
macro idpSave 1 // prevent multiple include statements

if (count % saveEach == 0) // results should be saved in current time step
{
  if (writeVtkOutput) // write results to vtk file formmat in a way that can be imported in Paraview as a group
  {
    if (mpirank == 0)
      print ("Saving VTK file...")

    if (writeFlowFieldOutput)
      savevtk(vtkOutputFilename+".vtu", Mesh, phi, Mg, F, Cl, OH, ux, uy, uz, p, dataname="phi Mg F Cl OH u v w p",
            order = orderOut, append = count ? true : false);
    else
      savevtk(vtkOutputFilename+".vtu", Mesh, phi, Mg, F, Cl, OH, dataname="phi Mg F Cl OH",
            order = orderOut, append = count ? true : false);
  }

  if (mpirank == 0)
  {
    print ("Saving text output...")

    ofstream output(textOutputFilename, append);
    if (count == 0) // write extra information to the beginning of the output file
    {
      // these are examples of writing different data to the beginning so they can be postprocessed later
      // output << "DOF: " << SpaceP1.ndof << endl;
      // output << "Elements: " << Mesh.nt << endl;
      output << k1 << "\t" << k2 << "\t" << DMg << "\t" << DCl << "\t"
            << alpha << "\t" << Fcoef << "\t" << alphaCoeff << endl;
    }
    // writing current time and evolved hydrogen to the output file
    output.precision(6);
    output << t << "\t" << (Vinit - scaffoldSize) * conv * saveMultiplier
           << "\t" << ((Vinit - scaffoldSize) / Vinit * 100) << "\n";
  }
}

ENDIFMACRO
