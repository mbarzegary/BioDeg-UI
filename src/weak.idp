// weak formulation of the PDEs, implemented in FreeFEM varf format

IFMACRO(!idpWeak)
macro idpWeak 1 // prevent multiple include statements

// all weak forms are in a format that the right hand side of the equation is not moved to
// left hand side, i.e. the right hand side term are also mentioed in the weak form without
// changing the sign (which is the normal way of defining weak form in FreeFEM). this makes
// creating A and b (Ax=b) easy to implement. other approach could be defining separate varf
// statements for right and left hand sides of the weak form.

// weak form of Mg ion concentration PDE
varf magnes(Mg, v1) =
  intN(Mesh,qfV=qfV1lump,optimize=0)(Mg/dt*v1)
  + intN(Mesh,qfV=qfV1lump,optimize=0)(temporalMult * Mgold/dt*v1)
  + intN(Mesh)( DeMg*(dx(Mg)*dx(v1) + dy(Mg)*dy(v1) + dz(Mg)*dz(v1)) )
  + intN(Mesh)(convectMult * (phi <= 0)*convect([upx, upy, upz], -dt, Mgold)*v1/dt)
  - intN(Mesh,qfV=qfV1lump)((phi <= 0)*k1*Mg*F/Fmax*v1)
  + intN(Mesh,qfV=qfV1lump)((phi <= 0)*k1*Mg*v1)
  + intN(Mesh,qfV=qfV1lump)((phi <= 0)*k2*F*Cl*Cl*v1)
  + intN(Mesh,qfV=qfV1lump)((phi > 0)*TGV*Mg*v1)
  + intN(Mesh,qfV=qfV1lump)((phi > 0)*TGV*Mgbc*v1)
;

// weak form of protective film concentration PDE
varf film(F, v2) =
  intN(Mesh,qfV=qfV1lump,optimize=0)(F*v2/dt)
  + intN(Mesh,qfV=qfV1lump,optimize=0)(Fold*v2/dt)
  + intN(Mesh,qfV=qfV1lump)((phi <= 0)*k1*Mg*F/Fmax*v2)
  + intN(Mesh,qfV=qfV1lump)((phi <= 0)*k1*Mg*v2)
  + intN(Mesh,qfV=qfV1lump)((phi <= 0)*k2*F*Cl*Cl*v2)
;

// weak form of chloride ion concentration PDE
varf chloride(Cl, v3) =
  intN(Mesh,qfV=qfV1lump,optimize=0)(Cl*v3/dt)
  + intN(Mesh,qfV=qfV1lump,optimize=0)(temporalMult * Clold*v3/dt)
  + intN(Mesh)( DeCl*(dx(Cl)*dx(v3) + dy(Cl)*dy(v3) + dz(Cl)*dz(v3)) )
  + intN(Mesh)(convectMult * (phi <= 0)*convect([upx, upy, upz], -dt, Clold)*v3/dt)
  // + intN(Mesh,qfV=qfV1lump)((phi > 0)*TGV*Cl*v3)
  // + intN(Mesh,qfV=qfV1lump)((phi > 0)*TGV*Clbc*v3)
;

// weak form of OH ion concentration PDE
varf hydroxide(OH, v4) =
  intN(Mesh,qfV=qfV1lump,optimize=0)(OH*v4/dt)
  + intN(Mesh,qfV=qfV1lump,optimize=0)(temporalMult * OHold*v4/dt)
  + intN(Mesh)( DeOH*(dx(OH)*dx(v4) + dy(OH)*dy(v4) + dz(OH)*dz(v4)) )
  + intN(Mesh)(convectMult * (phi <= 0)*convect([upx, upy, upz], -dt, OHold)*v4/dt)
  + intN(Mesh,qfV=qfV1lump)((phi <= 0)*k2*F*Cl*Cl*v4)
  // + intN(Mesh,qfV=qfV1lump)((phi > 0)*TGV*OH*v4)
  // + intN(Mesh,qfV=qfV1lump)((phi > 0)*TGV*OHbc*v4)
;

// weak form of the level set PDE
varf shrink(phi, vp) =
  intN(Mesh,optimize=0)(phi*vp/dt)
  + intN(Mesh,optimize=0)(phiold*vp/dt)
  + intN(Mesh,optimize=0)(v*normgradphi*vp)
;

// weak form of the Navier-Stokes PDE
varf navierstokes([ux, uy, uz, p], [uhx, uhy, uhz, ph]) =
  intN(Mesh)(NSMult * 1/dt * [ux, uy, uz]' * [uhx, uhy, uhz])
  + intN(Mesh)(
    + nue * (Grad(u):Grad(uh))
    - p * div(uh)
    - ph * div(u)
    - 1e-10 * p*ph
    )
  + intN(Mesh) (
    NSMult * 1/dt * [convect([upx, upy, upz], -dt, upx), convect([upx, upy, upz], -dt, upy),
               convect([upx, upy, upz], -dt, upz)]'* [uhx, uhy, uhz]
    )
  + intN(Mesh)(scaffold*tgv*ux*uhx)
  + intN(Mesh)(scaffold*tgv*uy*uhy)
  + intN(Mesh)(scaffold*tgv*uz*uhz)
  + on(Wall, ux=0, uy=0, uz=0)
  + on(Inlet, ux=uInX, uy=uInY, uz=uInZ)
  // + on(Outlet, p=0)
;

ENDIFMACRO
